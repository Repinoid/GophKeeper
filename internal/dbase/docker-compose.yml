# Три контейнера - сервер, агент и база данных

services:
  go_db:
    container_name: gkeeperdb
    # имя образа из которого создастся база данных
    image: postgres:17
    environment:
      POSTGRES_PASSWORD: parole
      POSTGRES_USER: userp
      POSTGRES_DB: dbaza
    ports:
      - target: 5432 
        published: 5432
        protocol: tcp
    volumes:
      - PgVolume:/var/lib/postgresql/data
    networks:
      - localnet

  pgadmin:
      image: dpage/pgadmin4:latest
      container_name: pgadmin
      environment:
        PGADMIN_DEFAULT_EMAIL: a@e.com
        PGADMIN_DEFAULT_PASSWORD: admpass
      volumes:
        - pgadmin_data:/var/lib/pgadmin
      ports:
        - "8080:80"
      depends_on:
        - go_db
      networks:
        - localnet
        
  # minio no SSL
  minio:
    image: minio/minio
    container_name: gkeeperS3
    # /buckets folder on container where S3 store
    command: server /buckets --console-address ":9001"
    environment:
      MINIO_ROOT_USER: nail
      MINIO_ROOT_PASSWORD: password
      MINIO_SERVER_URL: "https://localhost:9000"
      MINIO_BROWSER_REDIRECT_URL: "https://localhost:9001" # Console HTTPS
    volumes:
      # Sync S3
      - type: volume
        source: S3Volume
        # same as in command
        target: /buckets
      # Copy TLS certs, Read Only mode
      - ./certs:/root/.minio/certs:ro
    healthcheck:
      test: [ "CMD", "curl", "-f", "https://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    ports:
      # API: http://127.0.0.1:9000 
      - target: 9000
        published: 9000
        protocol: tcp
      # WebUI: http://127.0.0.1:9001
      - target: 9001
        published: 9001
        protocol: tcp
    restart: no
    networks:
      - localnet

volumes:
  PgVolume:
    driver: local
    driver_opts:
      type: none
      o: bind
      # /path/to/data
      device: ./dbaser
  pgadmin_data:
  S3Volume:
    driver: local
    driver_opts:
      type: none
      o: bind
      # /path/to/data
      device: ./S3Bucks  

networks:
  localnet:
    driver: bridge

